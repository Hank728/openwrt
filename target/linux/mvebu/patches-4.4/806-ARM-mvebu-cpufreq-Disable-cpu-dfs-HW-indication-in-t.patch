From fdfba06ecbaaa3021196efe48a74a680643a265d Mon Sep 17 00:00:00 2001
From: Gregory CLEMENT <gregory.clement@free-electrons.com>
Date: Wed, 30 Sep 2015 14:50:38 +0200
Subject: [PATCH 08/10] ARM: mvebu: cpufreq: Disable cpu dfs HW indication in
 the PMU during DFS

Needed for single CPU case??

based on work done by Neta Zur <neta@marvell.com>

Signed-off-by: Gregory CLEMENT <gregory.clement@free-electrons.com>
---
 arch/arm/mach-mvebu/pmsu.c | 37 +++++++++++++++++++++----------------
 1 file changed, 21 insertions(+), 16 deletions(-)

diff --git a/arch/arm/mach-mvebu/pmsu.c b/arch/arm/mach-mvebu/pmsu.c
index 89aed44..845ae7a 100644
--- a/arch/arm/mach-mvebu/pmsu.c
+++ b/arch/arm/mach-mvebu/pmsu.c
@@ -208,6 +208,23 @@ static int __init mvebu_v7_pmsu_init(void)
 	return ret;
 }
 
+static void mvebu_v7_pmsu_enable_dfs_cpu(int hw_cpu, bool enable)
+{
+	u32 reg;
+
+	if (pmsu_mp_base == NULL)
+		return;
+	/*
+	 * Disable PMU wait for the CPU to enter WFI when doing DFS
+	 * by setting CPUx Frequency ID to 0 and re-enable with 1
+	 */
+	reg = readl(pmsu_mp_base + PMSU_CTL_CFG(hw_cpu));
+	reg &= ~(PMSU_CTL_CFG_CPU0_FRQ_ID_MSK << PMSU_CTL_CFG_CPU0_FRQ_ID_SFT);
+	if (enable)
+		reg |= BIT(PMSU_CTL_CFG_CPU0_FRQ_ID_SFT);
+	writel(reg, pmsu_mp_base + PMSU_CTL_CFG(hw_cpu));
+}
+
 static void mvebu_v7_pmsu_enable_l2_powerdown_onidle(void)
 {
 	u32 reg;
@@ -236,6 +253,9 @@ static int mvebu_v7_pmsu_idle_prepare(unsigned long flags)
 	if (pmsu_mp_base == NULL)
 		return -EINVAL;
 
+	/* Disable PMU wait for this CPU when doing DFS */
+	mvebu_v7_pmsu_enable_dfs_cpu(hw_cpu, false);
+
 	/*
 	 * Adjust the PMSU configuration to wait for WFI signal, enable
 	 * IRQ and FIQ as wakeup events, set wait for snoop queue empty
@@ -593,21 +613,6 @@ int armada_xp_pmsu_dfs_request(int cpu)
 	return 0;
 }
 
-void mvebu_v7_pmsu_disable_dfs_cpu(int hw_cpu)
-{
-	u32 reg;
-
-	if (pmsu_mp_base == NULL)
-		return;
-	/*
-	 * Disable PMU wait for the CPU to enter WFI when doing DFS
-	 * by setting CPUx Frequency ID to 0
-	 */
-	reg = readl(pmsu_mp_base + PMSU_CTL_CFG(hw_cpu));
-	reg &= ~(PMSU_CTL_CFG_CPU0_FRQ_ID_MSK << PMSU_CTL_CFG_CPU0_FRQ_ID_SFT);
-	writel(reg, pmsu_mp_base + PMSU_CTL_CFG(hw_cpu));
-}
-
 int armada_38x_pmsu_dfs_request(int cpu)
 {
 	/*
@@ -713,7 +718,7 @@ static int __init mvebu_pmsu_cpufreq_init(void)
 	}
 	if (of_machine_is_compatible("marvell,armada380")) {
 		if (num_online_cpus() == 1)
-			mvebu_v7_pmsu_disable_dfs_cpu(1);
+			mvebu_v7_pmsu_enable_dfs_cpu(1, false);
 
 		mvebu_pmsu_dfs_request_ptr = armada_38x_pmsu_dfs_request;
 		platform_device_register_data(NULL, "cpufreq-dt", -1,
-- 
2.7.4

